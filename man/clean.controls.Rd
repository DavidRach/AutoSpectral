% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean_controls.R
\name{clean.controls}
\alias{clean.controls}
\title{Clean Controls}
\usage{
clean.controls(
  flow.control,
  asp,
  time.clean = FALSE,
  trim = FALSE,
  trim.factor = NULL,
  af.remove = FALSE,
  universal.negative = TRUE,
  downsample = TRUE,
  negative.n = asp$negative.n,
  positive.n = asp$positive.n,
  scatter.match = TRUE,
  refactor = TRUE,
  return.separately = FALSE
)
}
\arguments{
\item{flow.control}{Prepare using define.flow.control. List of the data and
essential information about the cytometer and data structure.}

\item{asp}{The AutoSpectral parameter list. Prepare using get.autospectral.param.
A list of essential parameters.}

\item{time.clean}{Logical, default is FALSE. Determines whether to run PeacoQC to
remove time-based inconsistencies in the controls.}

\item{trim}{Logical, default is FALSE. Determines whether to remove extreme
events (positive and negative) from controls. Extent of trimming is determined
by trim.factor. Include trim.factor if setting trim to TRUE.}

\item{trim.factor}{Numeric. Default is asp$rlm.trim.factor. Include trim.factor
if setting trim to TRUE.}

\item{af.remove}{Logical, default is FALSE. Determines whether to remove
intrusive autofluorescence contamination from cell controls using PCA-based
identification and gating. Requires universal negatives to be defined in the
control file and subsequently in flow.control via define.flow.control.}

\item{universal.negative}{Logical, default is TRUE. Determines whether to
use a universal negative sample as the negative for spectral extraction.
Requires universal negatives to be defined in the
control file and subsequently in flow.control via define.flow.control.}

\item{downsample}{Logical, default is TRUE. Determines whether to reduce cell
and bead control events to speed up processing.}

\item{negative.n}{Number of events to include in the downsampled negative
population. Default is asp$negative.n.}

\item{positive.n}{Number of events to include in the downsampled positive
population. Default is asp$positive.n}

\item{scatter.match}{Logical, default is TRUE. Determines whether to select
negative events based scatter profiles matching the positive events. Scatter
matching defines a region of FSC and SSC determined by the distribution of
selected positive events (see positive.n) and defines a gate for this region.}

\item{refactor}{Logical, default is TRUE. Reassigns event indices after cleaning
steps, setting up fresh, consistent indices.}

\item{return.separately}{Logical, default is FALSE. Provides the option to
return the cleaned expression data as an output as well as storing the clean
data in flow.control.}
}
\value{
No returns unless return.separately is set to TRUE. Output is stored
    in flow.control so that flow.control can be used subsequenlty as a complete
    data set.
}
\description{
A four-part function to clean single color controls in order to extract
    fluorophore signatures. Any part can be run independently.
    Stage 1: PeacoQC to eliminate flow artefacts.
    Stage 2: Trimming to eliminate extreme events.
    Stage 3: AF noise removal using PCA unmixing on matching unstained (cells only).
    Stage 4: brightest event selection from positive, universal negative from
    matching negative and downsampling to speed up rlm spectra optimization.
}
